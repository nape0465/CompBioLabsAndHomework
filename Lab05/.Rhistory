print (i) }
#5d
for ( i in seq( 1:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
#5d
for ( i in seq( 0:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
#5d
for ( i in seq( 2:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
#### Question 5 ####
#5a
data_for_Q5a <- rep( 0, 18 )
#5b
for ( i in seq(1,18) ) { i <- i * 3
print (i)
}
#### Question 5 ####
#5a
data_for_Q5a <- rep( 0, 18 )
#5b
for ( i in seq(1,18) ) { i <- i * 3
print (i)
}
a
data_for_Q5c[1] <- 1
data_for_Q5c
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
#5d
for ( i in seq( 2:18 ) ) { i  <- 1 + (2 * (i))
print (i+1) }
for ( i in seq( 1:20 ) ) { i  <- (i-1) + (i-2) )
print (i) }
for ( i in seq( 1:20 ) ) { i  <- (i-1) + (i-2)
print (i) }
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
for ( i in seq( 1:20 ) ) { i  <- (i-1) + (i-2)
print (i) }
for ( i in seq( 1:20 ) ) { i  <- (i-1) + (i-2)
print (i) }
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6
for ( i in seq( 1:20 ) ) { i  <- (i-1) + (i-2)
print (i) }
#5d
answer <- for ( i in seq( 2:18 ) ) { i  <- 1 + (2 * (i))
print (i) }
## HELPPPP OFFICE HOURS ##
answer
time <- c(1:12)
time
#### Question 4 ####
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
question7 <- vector(length= 50)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
time <- c(1:12)
abundance <- question7
quuestion7
question7 <- vector(length= 50)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
question7 <- vector(length= 25)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
question7
abundance <- question7
plot (time, abundance)
question7 <- vector(length= 12)
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
question7 <- vector(length= 12)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
question7
time <- c(1:12)
abundance <- question7
plot (time, abundance)
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
abundance <- vector(length= 12)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
time <- c(1:12)
plot (time, abundance)
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
abundance <- vector(length= 12)
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
time <- c(1:12)
plot (time, abundance)
seq( 2:18 )
seq( 2,18 )
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c  <- 1 + (2 * (i))
print (i) }
data_for_Q5c
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c[i]  <- 1 + (2 * (i))
print (i) }
data_for_Q5c
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c[i]  <- 1 + (2 * (i))
print (data_for_Q5c) }
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c[i]  <- 1 + (2 * (data_for_Q5c[i-1]))
print (data_for_Q5c) }
print (data_for_Q5c)
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c[i]  <- 1 + (2 * (data_for_Q5c[i-1]))
}
print (data_for_Q5c)
#### Question 5 ####
#5a
data_for_Q5a <- rep( 0, 18 )
#5b
for ( i in seq(1,18) ) { i <- i * 3
print (i)
}
print(data_for_Q5a)
#5b
for ( i in seq(1,18) ) { data_for_Q5a[i] <- i * 3
print (data_for_Q5a)
}
print (data_for_Q5a)
#### Question 5 ####
#5a
data_for_Q5a <- rep( 0, 18 )
#5b
for ( i in seq(1,18) ) { data_for_Q5a[i] <- i * 3
}
print (data_for_Q5a)
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6
for ( i in seq( 1,20 ) ){
data_for_Q6[i]  <- (data_for_Q6[i-1]) + (data_for_Q6[i-2])
print (data_for_Q6) }
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6[2] <- 1
data_for_Q6
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6[2] <- 1
data_for_Q6
for ( i in seq( 3,20 ) ){
data_for_Q6[i]  <- (data_for_Q6[i-1]) + (data_for_Q6[i-2])
print (data_for_Q6) }
print (data_for_Q6)
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6[2] <- 1
data_for_Q6
for ( i in seq( 3,20 ) ){
data_for_Q6[i]  <- (data_for_Q6[i-1]) + (data_for_Q6[i-2])
}
print (data_for_Q6)
abundance <- vector(length= 12)
anundance
abundance <- vector(length= 12)
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
abundance <- rep(0,t)
abundance
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
abundance <- rep(0,t)
abundance
for (i in 1:t) {
abundance[i] <- abundance[i-1] + ( r * abundance[i-1] * (K - abundance[i-1])/K )
print (abundance)
}
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.08
t <- 12
abundance <- rep(n,t)
abundance
for (i in 2:t) {
abundance[i] <- abundance[i-1] + ( r * abundance[i-1] * (K - abundance[i-1])/K )
print (abundance)
}
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.8
t <- 12
abundance <- rep(n,t)
abundance
for (i in 2:t) {
abundance[i] <- abundance[i-1] + ( r * abundance[i-1] * (K - abundance[i-1])/K )
print (abundance)
}
time <- c(1:12)
plot (time, abundance)
#### Question 1 ####
for ( hi in 1:10 ){
print ("hi")}
#### Question 2 ####
piggybank <- 10 # dollars
allowance <- 5 # dollars per week
gumCost <- 2 * 1.34 # cost of 2 packs of gum per week
weeks <- 8
for ( i in 1:weeks ) {
piggybank <- piggybank + allowance - gumCost
print (piggybank)
}
#### Question 2 ####
piggybank <- 10 # dollars
allowance <- 5 # dollars per week
gumCost <- 2 * 1.34 # cost of 2 packs of gum per week
weeks <- 8
for ( i in 1:weeks ) {
piggybank <- piggybank + allowance - gumCost
}
print (piggybank)
for ( i in 1:weeks ) {
piggybank <- piggybank + allowance - gumCost
print (piggybank)
}
#### Question 3 ####
population <- 2000
popdecrease <- 0.05
years <- 7
for ( i in 1:years ) {
population <- population - ( population * popdecrease )
print (population)
}
#### Question 4 ####
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.8
t <- 12
for (i in 1:t) {
n <- n + ( r * n * (K - n)/K )
print (n)
}
#### Question 5 ####
#5a
data_for_Q5a <- rep( 0, 18 )
#5b
for ( i in seq(1,18) ) { data_for_Q5a[i] <- i * 3
}
print (data_for_Q5a)
#5c
data_for_Q5c <- rep ( 0, 18 )
data_for_Q5c[1] <- 1
data_for_Q5c
#5d
for ( i in seq( 2,18 ) ) {
data_for_Q5c[i]  <- 1 + (2 * (data_for_Q5c[i-1]))
}
print (data_for_Q5c)
#### Question 6 ####
data_for_Q6 <- rep( 0, 18 )
data_for_Q6[2] <- 1
data_for_Q6
for ( i in seq( 3,20 ) ){
data_for_Q6[i]  <- (data_for_Q6[i-1]) + (data_for_Q6[i-2])
}
print (data_for_Q6)
n <- 2500 # population at time t
K <- 10000 # environmental carrying capacity
r <- 0.8
t <- 12
abundance <- rep(n,t)
abundance
for (i in 2:t) {
abundance[i] <- abundance[i-1] + ( r * abundance[i-1] * (K - abundance[i-1])/K )
print (abundance)
}
time <- c(1:12)
plot (time, abundance)
### Part ONE ###
# Question 1
x <- 10
### Part ONE ###
# Question 1
x <- 10
5 <- threshold
5 <- threshold
5 <- "threshold"
threshold <- 5
### Part ONE ###
# Question 1
x <- 10
threshold <- 5
if( x > threshold) { print "x is bigger than threshold"
}
if ( x > threshold) { print "x is bigger than threshold" }
if ( x > threshold) { print( "x is bigger than threshold") }
### Part ONE ###
# Question 1
x <- 10
threshold <- 5
if ( x > threshold) { print( "x is bigger than threshold")
}
else {print ("x is not bigger than threshold")}
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
if ( x > threshold) { print( "x is bigger than threshold")
}
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
setwd("~/Desktop/Spring_2021/Ebio4420/compBioSandbox/CompBio_on_git/Labs/Lab05")
# Question 2
datalab05 <- read.csv(Exampledata.csv)
# Question 2
datalab05 <- read.csv(ExampleData.csv)
# Question 2
datalab05 <- read.csv(ExampleData.csv)
# Question 2
datalab05 <- read.csv("ExampleData.csv")
str(datalab05)
DataLab05_Vec <- datalab05$x
# Question 2a
threshold_for_question_2 <- 0
if (DataLab05_Vec [1] < 0) {DataLab05_Vec <- NA}
length_vec <- 2024
# Question 2a
threshold_for_question_2 <- 0
for ( i in (1:length_vec) ) {
if (DataLab05_Vec [i] < 0) {DataLab05_Vec[i] <- NA}
}
View(datalab05)
DataLab05_Vec <- datalab05$x
length_vec <- 2024
# Question 2a
threshold_for_question_2 <- 0
for ( i in (1:length_vec) ) {
if (DataLab05_Vec [i] < 0) {DataLab05_Vec[i] <- NA}
}
view(DataLab05_Vec)
View(DataLab05_Vec)
# Question 2b
DataLab05_Vec
# Question 2b
is.na (DataLab05_Vec)
# Question 2b
is.na (DataLab05_Vec)
### Part ONE ###
# Question 1
x <- 10
threshold <- 5
if ( x > threshold) { print( "x is bigger than threshold")
} else {
print ("x is not bigger than threshold")}
# Question 2
datalab05 <- read.csv("ExampleData.csv")
str(datalab05)
DataLab05_Vec <- datalab05$x
length_vec <- 2024
# Question 2a
threshold_for_question_2 <- 0
for ( i in (1:length_vec) ) {
if (DataLab05_Vec [i] < 0) {DataLab05_Vec[i] <- NA}
}
# Question 2b
is.na (DataLab05_Vec)
# Question 2b
is.na (DataLab05_Vec)
DataLab05_Vec [TRUE] <- NaN
DataLab05_Vec
# Question 2a
threshold_for_question_2 <- 0
# Question 2
datalab05 <- read.csv("ExampleData.csv")
str(datalab05)
DataLab05_Vec <- datalab05$x
length_vec <- 2024
# Question 2a
threshold_for_question_2 <- 0
for ( i in (1:length_vec) ) {
if (DataLab05_Vec [i] < 0) {DataLab05_Vec[i] <- NA}
}
# Question 2b
is.na (DataLab05_Vec)
if (DataLab05_Vec [i] < 0) {DataLab05_Vec[i] <- NA}
which(DataLab05_Vec)
# Question 2b
is.na (DataLab05_Vec)
which(DataLab05_Vec)
which(is.na (DataLab05_Vec))
NaN <- which(is.na (DataLab05_Vec))
which(is.na (DataLab05_Vec)) <- NaN
Vec_LogicTest_Result <- which(is.na (DataLab05_Vec))
DataLab05_Vec [Vec_LogicTest_Result] <- NaN
DataLab05_Vec
# Question 2b
is.na (DataLab05_Vec)
Vec_LogicTest_Result <- which(is.na (DataLab05_Vec))
DataLab05_Vec [Vec_LogicTest_Result] <- NaN
DataLab05_Vec
# Question 2c
is.nan (DataLab05_Vec)
# Question 2b
Vec_LogicTest_Result <- is.na (DataLab05_Vec)
DataLab05_Vec [Vec_LogicTest_Result] <- NaN
# Question 2b
Vec_LogicTest_Result <- is.na (DataLab05_Vec)
DataLab05_Vec [Vec_LogicTest_Result] <- NaN
DataLab05_Vec
# Question 2c
is.nan (DataLab05_Vec)
# Question 2c
is.nan (DataLab05_Vec)
# Question 2c
Vec_LogicTest_Result2.0 <-which(is.nan (DataLab05_Vec))
# Question 2c
Vec_LogicTest_Result2.0 <-which(is.nan (DataLab05_Vec))
DataLab05_Vec [Vec_LogicTest_Result2.0] <- 0
DataLab05_Vec
# Question 2d
lower_threshold <- 50
upper_threshold <- 100
Question2d_Results <- DataLab05_Vec >lower_threshold & DataLab05_Vec < upper_threshold
Question2d_Results
sum(Question2d_Results)
#Question 2e
FiftyToOneHundred <- DataLab05_Vec [Question2d_Results]
FiftyToOneHundred
setwd("~/Desktop/Spring_2021/Ebio4420/CompBioLabsAndHomework/Lab05")
#Question 2f
write.csv(x=FiftyToOneHundred.csv, file = "FiftyToOneHundred.csv")
#Question 2f
write.csv(x=FiftyToOneHundred.csv, file = "FiftyToOneHundred.csv")
#Question 2f
write.csv(x=FiftyToOneHundred.csv, file = "FiftyToOneHundred.csv")
#Question 2f
write.csv(x=FiftyToOneHundred.csv, file = "FiftyToOneHundred.csv")
#Question 2f
write.csv(x = FiftyToOneHundred, file = "FiftyToOneHundred.csv")
